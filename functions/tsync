#----------------------------------------------
# Function to sync files to multiple hosts
#-----------------------------------------------
tsync() {
    # Run the custom git push command
    git -C ~/bash/ tpush
    
    # Define the sync targets and corresponding users
    local SYNC_TARGETS=("wsl" "chrome" "master" "server")
    local USERS=("candy" "orion" "master" "server") # Replace these with actual usernames

    # Function to perform git pull on each target
    sync_to_host() {
        local host=$1
        local user=$2
        echo "Syncing with $host as $user"
        ssh "$user@$host" git -C /home/"$user"/bash/ pull
    }

    # Loop through each sync target and execute the sync
    for i in "${!SYNC_TARGETS[@]}"; do
        sync_to_host "${SYNC_TARGETS[$i]}" "${USERS[$i]}"
    done

    echo "All hosts have been synced."
}


old_tsync() {
    # exit, in memory of this fallen function
    echo "This function has been deprecated. Please use the new git clone method."
    return
    local FILES_TO_SYNC=(
        "~/bash"
        "~/.ssh"
    )
    local HOSTS=("wsl" "chrome" "master" "server")

    sync_to_host() {
        local host=$1
        for item in "${FILES_TO_SYNC[@]}"; do
            local expanded_item=$(eval echo $item)
            echo "Syncing $expanded_item to $host:~"
            rsync -avz --progress "$expanded_item" "$host:~/"
        done
    }

    for host in "${HOSTS[@]}"; do
        echo "Starting sync for host: $host"
        sync_to_host $host
        echo "Completed sync for host: $host"
    done

    echo "All hosts have been synced."
}
